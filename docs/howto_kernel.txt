# ----------------------------------------------------------------------------------
#
# simple howto for building a custom kernel
# 
# ----------------------------------------------------------------------------------
#
# DEVICES
# - arietta -> http://www.acmesystems.it/arietta
# - aria    -> http://www.acmesystems.it/aria
#
# KERNEL version
# - linux-4.0.0
# - linux-3.18.11 (latest RT-PREEMPT)
# - linux-3.14.17 (xenomai)
#
# DOWNLOADS
# - http://www.acmesystems.it/
# - https://www.kernel.org/pub/linux/kernel/v3.x/
# - https://www.kernel.org/pub/linux/kernel/v4.x/
# - https://www.kernel.org/pub/linux/kernel/projects/rt/3.14/older/
#
# MOUNTPOINTS
# arietta:
# - kernel -> /mnt/arietta_kernel     
# - rootfs -> /mnt/arietta_rootfs
# - home   -> /mnt/arietta_home
# aria:
# - kernel -> /mnt/aria_kernel     
# - rootfs -> /mnt/aria_rootfs
# - home   -> /mnt/aria_home 
#
# FSTAB entrys for MOUNTPOINTS
# aria:
# LABEL=KERNEL_ARIA    /mnt/aria_kernel  vfat  defaults,user,noauto   0 0
# LABEL=ROOTFS_ARIA    /mnt/aria_rootfs  ext4  defaults,user,noauto   0 0
# LABEL=HOME_ARIA      /mnt/aria_home    ext4  defaults,user,noauto   0 0
# arietta:
# FSTAB entrys for MOUNTPOINTS
# LABEL=KERNEL_ARIE    /mnt/arietta_kernel  vfat  defaults,user,noauto   0 0
# LABEL=ROOTFS_ARIE    /mnt/arietta_rootfs  ext4  defaults,user,noauto   0 0
# LABEL=HOME_ARIE      /mnt/arietta_home    ext4  defaults,user,noauto   0 0
# ----------------------------------------------------------------------------------
#
# Note: in $ARMEL_HOME/externel you can clone some useful repos,
#       one of them is the linus kernel tree. So you can use that dir or
#       you download the tar file to $ARMEL_HOME/kernel.
#       Pls check the $DIR values below to be in the correct dir!
#

#
# clone kernel
#
DIR: $ARMEL_HOME/kernel/
KDO: git clone git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git

# ------------------------------------ PATCH start ---------------------------------

# 
# patch kernel for rt-preempt 
#
DIR: $ARMEL_HOME/kernel/linux-stable
KDO: git checkout -b stable v3.18.11
KDO: zcat ../patch-3.18.11-rt6.patch.gz | patch -p1

# ---

#
# patch ipipe 
#
DIR
KDO:

#
# patch xenomai
#
DIR
KDO:

# ------------------------------------ PATCH end -----------------------------------


# ------------------------------------ CONFIG start --------------------------------

#
# configure kernel 
#
DIR: $ARMEL_HOME/external/linux (or download to kernel/linux-...)
KDO: git checkout -b stable v3.19.4
KDO: cp $ARMEL_HOME/configs/kernel_config_4.0.x_arietta .config
KDO(aria): cp $ARMEL_HOME/configs/kernel_config_3.18.x_aria .config
KDO: make ARCH=arm menuconfig

# ------------------------------------ CONFIG end ----------------------------------


# ------------------------------------ BUILD start ---------------------------------

#
#  build dtb 
#
DIR: $ARMEL_HOME/external/linux (or download to kernel/linux-...)
KDO: cp $ARMEL_HOME/configs/acme-arietta.dts arch/arm/boot/dts/acme-arietta.dts
KDO(aria): cp $ARMEL_HOME/configs/acme-aria.dts arch/arm/boot/dts/acme-aria.dts
KDO: make ARCH=arm CROSS_COMPILE=arm-armel-linux-gnueabi- acme-arietta.dtb
KDO(aria): make ARCH=arm CROSS_COMPILE=arm-armel-linux-gnueabi- acme-aria.dtb

#
# build kernel/modules 
#
DIR: $ARMEL_HOME/external/linux (or download to kernel/linux-...)
KDO: make -j10 ARCH=arm CROSS_COMPILE=arm-armel-linux-gnueabi- uImage modules

#
# install modules
#
DIR: $ARMEL_HOME/external/linux (or download to kernel/linux-...)
KDO: make ARCH=arm INSTALL_MOD_PATH=../modules_4.0.0 modules_install
KDO: make ARCH=arm INSTALL_MOD_PATH=../modules_3.19.4 modules_install
KDO(aria): make ARCH=arm INSTALL_MOD_PATH=../modules_3.18.9 modules_install

# ------------------------------------ BUILD end -----------------------------------


# ------------------------------------ COPY to SD start ----------------------------

#
# copy dtb 
#
DIR: $ARMEL_HOME/external/linux (or download to kernel/linux-...)
KDO: cp arch/arm/boot/dts/acme-arietta.dtb /mnt/arietta_kernel/
KDO: cp arch/arm/boot/dts/acme-arietta.dts /mnt/arietta_kernel/
KDO(aria): cp arch/arm/boot/dts/acme-aria.dts /mnt/aria_kernel/
KDO(aria): cp arch/arm/boot/dts/acme-aria.dtb /mnt/aria_kernel/

#
# copy kernel + kernel config 
#
DIR: $ARMEL_HOME/external/linux (or download to kernel/linux-...)
KDO: cp arch/arm/boot/uImage /mnt/arietta_kernel/
KDO: cp .config /mnt/arietta_kernel/
KDO(aria): cp arch/arm/boot/uImage /mnt/aria_kernel/
KDO(aria): cp .config /mnt/aria_kernel/

#
# copy modules 
#
# Note: maybe your need to remove the old one
DIR: $ARMEL_HOME/external/linux (or download to kernel/linux-...)
KDO: sudo rsync -avc ../modules_4.0.0/lib/modules/. /mnt/arietta_rootfs/lib/modules/.
KDO: sudo rsync -avc ../modules_3.19.4/lib/modules/. /mnt/arietta_rootfs/lib/modules/.
KDO(aria): sudo rsync -avc ../modules_3.18.9/lib/modules/. /mnt/aria_rootfs/lib/modules/.

#
# copy cleaned source to sd card 
#
# Note: 
DIR: depends ...
KDO: sudo rsync -av --delete linux-4.0 /mnt/arietta_rootfs/usr/src/.
KDO: sudo rsync -av --delete linux-3.19.4 /mnt/arietta_rootfs/usr/src/.
KDO(aria): sudo rsync -av --delete linux-3.18.9 /mnt/aria_rootfs/usr/src/.


# ------------------------------------ COPY to SD end ------------------------------


#
# Finish -> after login 
#
DIR: /usr/src
KDO: depmod -a
KDO: ln -s linux-4.0 linux
MAYBE: remove your old kernel tree (also installed modules -> /lib/module/your_old_kernel)

#
# Prepare linux tree to build your modules against the new kernel
#
DIR: /usr/src/linux-4.0
KDO: make clean
KDO: make scripts

#
# Prepare modules to link 
#
DIR: /lib/modules/4.0.0
KDO: rm build
KDO: rm source
KDO: ln -s /usr/src/linux-4.0.0 source
KDO: ln -s /usr/src/linux-4.0.0 build




